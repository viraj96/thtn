(in-package :shop-user)
    (defdomain pick_place_coordination (

        (:operator (!move_to_home_state ?r ?target ?current ?time)
            (
                (domain_time ?time)
                (safe_state ?target)
                (unsafe_state ?current)
                (robot_config ?r ?current)
                (assign ?new_time (+ ?time 10))
            )
            (
                (domain_time ?time)
                (robot_config ?r ?current)
            )
            (
                (domain_time ?new_time)
                (robot_config ?r ?target)
            )
        )

        (:operator (!rail_move ?r ?home ?from ?to ?time)
            (
                (occupied ?from)
                (safe_state ?home)
                (domain_time ?time)
                (robot_at ?r ?from)
                (not (occupied ?to))
                (neighbors ?from ?to)
                (robot_config ?r ?home)
                (assign ?new_time (+ ?time 20))
            )
            (
                (occupied ?from)
                (robot_at ?r ?from)
                (domain_time ?time)
            )
            (
                (occupied ?to)
                (robot_at ?r ?to)
                (domain_time ?new_time)
            )
        )

        (:operator (!grasp ?r ?i ?home ?target ?from ?iloc ?time)
            (
                (gripper_free ?r)
                (item_at ?i ?iloc)
                (safe_state ?home)
                (robot_at ?r ?from)
                (domain_time ?time)
                (not (grasped ?r ?i))
                (unsafe_state ?target)
                (reachable ?from ?iloc)
                (robot_config ?r ?home)
                (assign ?new_time (+ ?time 30))
            )
            (
                (gripper_free ?r)
                (item_at ?i ?iloc)
                (domain_time ?time)
                (robot_config ?r ?home)
            )
            (
                (grasped ?r ?i)
                (gripper_used ?r)
                (domain_time ?new_time)
                (robot_config ?r ?target)
            )
        )

        (:operator (!release ?r ?i ?home ?target ?from ?iloc ?time)
            (
                (grasped ?r ?i)
                (gripper_used ?r)
                (safe_state ?home)
                (domain_time ?time)
                (robot_at ?r ?from)
                (unsafe_state ?target)
                (reachable ?from ?iloc)
                (robot_config ?r ?home)
                (assign ?new_time (+ ?time 30))
            )
            (
                (grasped ?r ?i)
                (gripper_used ?r)
                (domain_time ?time)
                (robot_config ?r ?home)
            )
            (
                (gripper_free ?r)
                (item_at ?i ?iloc)
                (domain_time ?new_time)
                (robot_config ?r ?target)
            )
        )

        (:method (print-current-state)
            ((eval (print-current-state)))
            ()
        )

        (:method (pick_item ?r ?i)
            (
                (safe_state ?home)
                (item_at ?i ?iloc)
                (robot_at ?r ?from)
                (not (grasped ?r ?i))
                (robot_config ?r ?home)
                (reachable ?from ?iloc)
            )
            (:ordered
                (
                    (!grasp ?r ?i ?home ?target ?from ?iloc ?time_one)
                    (!move_to_home_state ?r ?home ?target ?time_two)
                )

            )
        )

        (:method (drop_item ?r ?i ?drop_loc)
            (
                (grasped ?r ?i)
                (gripper_used ?r)
                (safe_state ?home)
                (robot_at ?r ?from)
                (robot_config ?r ?home)
                (reachable ?from ?drop_loc)
            )
            (:ordered
                (
                    (!release ?r ?i ?home ?target ?from ?drop_loc ?time_one)
                    (!move_to_home_state ?r ?home ?target ?time_two)
                )
            )
        )

        (:method (get_to ?r ?dest)
            (
                (robot_at ?r ?dest)
            )
            (:ordered
                ()
            )
        )

        (:method (get_to ?r ?dest_rb)
            (
                (robot_at ?r ?current)
                (neighbors ?current ?n1)
                (distance ?n1 ?dest_rb ?d1)
                (distance ?current ?dest_rb ?d2)
                (call < ?d1 ?d2)
                (not (neighbors ?current ?dest_rb))
            )
            (:ordered
                (
                    (get_to ?r ?n1)
                    (get_to ?r ?dest_rb)
                )
            )
        )

        (:method (get_to ?r ?dest_rb)
            (
                (robot_at ?r ?current)
                (not (occupied ?dest_rb))
                (neighbors ?current ?dest_rb)
            )
            (:ordered
                (
                    (!rail_move ?r ?home ?current ?dest_rb ?time)
                )
            )
        )

        (:method (get_to ?r1 ?dest_rb)
            (
                (occupied ?dest_rb)
                (robot_at ?r1 ?current)
                (robot_at ?r2 ?dest_rb)
                (neighbors ?current ?dest_rb)
                (neighbors ?dest_rb ?next_rb)
                (distance ?current ?next_rb ?d)
                (call > ?d 0)
            )
            (:ordered
                (
                    (!rail_move ?r2 ?home ?dest_rb ?next_rb ?time_one)
                    (!rail_move ?r1 ?home ?current ?dest_rb ?time_two)
                )
            )
        )

        (:method (move_item ?i ?drop_loc)
            (
                (safe_state ?home)
                (not (grasped ?r ?i))
                (item_at ?i ?pick_loc)
                (robot_config ?r ?home)
                (reachable ?pick_rb ?pick_loc)
                (reachable ?drop_rb ?drop_loc)
            )
            (:ordered
                (
                    (get_to ?r ?pick_rb)
                    (pick_item ?r ?i)
                    (get_to ?r ?drop_rb)
                    (drop_item ?r ?i ?drop_loc)
                )
            )
        )

    ))

    (defproblem task pick_place_coordination
        (
            (domain_time 0)
            (gripper_free ur5A)
            (gripper-free ur5B)
            (safe_state home)
            (unsafe_state rand)
            (robot_config ur5A home)
            (robot_config ur5B home)
            (occupied blockA)
    		(occupied blockI)
			(robot_at ur5A blockA)
			(robot_at ur5B blockI)
			(neighbors blockA blockB)
			(neighbors blockB blockA)
			(neighbors blockB blockC)
			(neighbors blockC blockB)
			(neighbors blockC blockD)
			(neighbors blockD blockC)
			(neighbors blockD blockE)
			(neighbors blockE blockD)
			(neighbors blockE blockF)
			(neighbors blockF blockE)
			(neighbors blockF blockG)
			(neighbors blockG blockF)
			(neighbors blockG blockH)
			(neighbors blockH blockG)
			(neighbors blockH blockI)
			(neighbors blockI blockH)
			(neighbors blockI blockJ)
			(neighbors blockJ blockI)
			(item_at box1 box1_pick_loc)
			(item_at box2 box2_pick_loc)
			(item_at box3 box3_pick_loc)
			(item_at box4 box4_pick_loc)
			(item_at box5 box5_pick_loc)
			(item_at box6 box6_pick_loc)
			(item_at box7 box7_pick_loc)
			(item_at box8 box8_pick_loc)
			(item_at box9 box9_pick_loc)
			(item_at box10 box10_pick_loc)
			(reachable blockE box1_pick_loc)
			(reachable blockH box1_drop_loc)
			(reachable blockE box2_pick_loc)
			(reachable blockF box2_drop_loc)
			(reachable blockH box3_pick_loc)
			(reachable blockC box3_drop_loc)
			(reachable blockB box4_pick_loc)
			(reachable blockA box4_drop_loc)
			(reachable blockH box5_pick_loc)
			(reachable blockF box5_drop_loc)
			(reachable blockD box6_pick_loc)
			(reachable blockC box6_drop_loc)
			(reachable blockD box7_pick_loc)
			(reachable blockE box7_drop_loc)
			(reachable blockH box8_pick_loc)
			(reachable blockC box8_drop_loc)
			(reachable blockE box9_pick_loc)
			(reachable blockH box9_drop_loc)
			(reachable blockB box10_pick_loc)
			(reachable blockH box10_drop_loc)
			(distance blockA blockA 0)
			(distance blockA blockB 1)
			(distance blockA blockC 2)
			(distance blockA blockD 3)
			(distance blockA blockE 4)
			(distance blockA blockF 5)
			(distance blockA blockG 6)
			(distance blockA blockH 7)
			(distance blockA blockI 8)
			(distance blockA blockJ 9)

			(distance blockB blockA 1)
			(distance blockB blockB 0)
			(distance blockB blockC 1)
			(distance blockB blockD 2)
			(distance blockB blockE 3)
			(distance blockB blockF 4)
			(distance blockB blockG 5)
			(distance blockB blockH 6)
			(distance blockB blockI 7)
			(distance blockB blockJ 8)

			(distance blockC blockA 2)
			(distance blockC blockB 1)
			(distance blockC blockC 0)
			(distance blockC blockD 1)
			(distance blockC blockE 2)
			(distance blockC blockF 3)
			(distance blockC blockG 4)
			(distance blockC blockH 5)
			(distance blockC blockI 6)
			(distance blockC blockJ 7)

			(distance blockD blockA 3)
			(distance blockD blockB 2)
			(distance blockD blockC 1)
			(distance blockD blockD 0)
			(distance blockD blockE 1)
			(distance blockD blockF 2)
			(distance blockD blockG 3)
			(distance blockD blockH 4)
			(distance blockD blockI 5)
			(distance blockD blockJ 6)

			(distance blockE blockA 4)
			(distance blockE blockB 3)
			(distance blockE blockC 2)
			(distance blockE blockD 1)
			(distance blockE blockE 0)
			(distance blockE blockF 1)
			(distance blockE blockG 2)
			(distance blockE blockH 3)
			(distance blockE blockI 4)
			(distance blockE blockJ 5)

			(distance blockF blockA 5)
			(distance blockF blockB 4)
			(distance blockF blockC 3)
			(distance blockF blockD 2)
			(distance blockF blockE 1)
			(distance blockF blockF 0)
			(distance blockF blockG 1)
			(distance blockF blockH 2)
			(distance blockF blockI 3)
			(distance blockF blockJ 4)

			(distance blockG blockA 6)
			(distance blockG blockB 5)
			(distance blockG blockC 4)
			(distance blockG blockD 3)
			(distance blockG blockE 2)
			(distance blockG blockF 1)
			(distance blockG blockG 0)
			(distance blockG blockH 1)
			(distance blockG blockI 2)
			(distance blockG blockJ 3)

			(distance blockH blockA 7)
			(distance blockH blockB 6)
			(distance blockH blockC 5)
			(distance blockH blockD 4)
			(distance blockH blockE 3)
			(distance blockH blockF 2)
			(distance blockH blockG 1)
			(distance blockH blockH 0)
			(distance blockH blockI 1)
			(distance blockH blockJ 2)

			(distance blockI blockA 8)
			(distance blockI blockB 7)
			(distance blockI blockC 6)
			(distance blockI blockD 5)
			(distance blockI blockE 4)
			(distance blockI blockF 3)
			(distance blockI blockG 2)
			(distance blockI blockH 1)
			(distance blockI blockI 0)
			(distance blockI blockJ 1)

			(distance blockJ blockA 9)
			(distance blockJ blockB 8)
			(distance blockJ blockC 7)
			(distance blockJ blockD 6)
			(distance blockJ blockE 5)
			(distance blockJ blockF 4)
			(distance blockJ blockG 3)
			(distance blockJ blockH 2)
			(distance blockJ blockI 1)
			(distance blockJ blockJ 0)

		)
		(
			(move_item box1 box1_drop_loc)
			(move_item box2 box2_drop_loc)
			(move_item box3 box3_drop_loc)
			(move_item box4 box4_drop_loc)
			(move_item box5 box5_drop_loc)
			(move_item box6 box6_drop_loc)
			(move_item box7 box7_drop_loc)
			(move_item box8 box8_drop_loc)
			(move_item box9 box9_drop_loc)
			(move_item box10 box10_drop_loc)
		)
)
(find-plans 'task :verbose :long-plans)